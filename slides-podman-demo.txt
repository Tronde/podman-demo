%title: Podman Demo/Workshop
%author: Joerg Kastning

-> Podman Demo/Workshop <-
==========================

-> A command-line based `podman` workshop <-

_Content:_

Build               *container images with Buildah*

Run                 *containers using Ansible and `systemd`*

Manage/Troubleshoot *methods and tools*

-------------------------------------------------------------------------------

-> Build container images with Buildah <-
=========================================

**User Story:** Some user needs to build a container image by extending some
base image to provide a custom container image that will serve an
application.

-------------------------------------------------------------------------------

-> Build container images with Buildah <-
-----------------------------------------

Quick facts:

  * No Daemon - Buildah requires no container runtime
  * Works with images and from scratch
  * Builds images from a Containerfile/Dockerfile
  * Builds images from scatch and with shell scripts

-------------------------------------------------------------------------------

-> Build container images with Buildah from a Container file <-
---------------------------------------------------------------

Workshop Cheat Sheet Part 1:

~~~
# Installing Buildah
sudo dnf -y in buildah
buildah from registry.access.redhat.com/ubi9/ubi
buildah images
buildah containers

# Building an image from a Containerfile with Buildah
cat Containerfile
FROM registry.access.redhat.com/ubi9/ubi
ADD myecho /usr/local/bin
ENTRYPOINT "/usr/local/bin/myecho"

cat myecho
echo "This container works!"

chmod 755 myecho

# Build the myecho image
buildah bud -t myecho .

# Verfiy
buildah images

# Run
podman run --rm --name=myecho localhost/myecho
~~~

-------------------------------------------------------------------------------

-> Build container images with Buildah from a Container file <-
---------------------------------------------------------------

Building from a Containerfile has some disadvantages:

  * If something breaks you need to start the whole build from the beginning
  * There is no chance to interupt and troubleshoot the build process
  * It is non-interactive, you cannot anser questions or provide input

As an alternative you can use the "shell mode".

-------------------------------------------------------------------------------

-> Build container images with Buildah (shell mode) <-
------------------------------------------------------

  * You can do your build step by step
  * Of course, you can put all your steps into some shell script
  * You can respond to interactive questions or input requests (e.g. Here docs)
  ^
  * Let me show you the script `build_myecho_image.sh`

-------------------------------------------------------------------------------
-> RHEL and Universal Base Images <-
====================================

-> The Red Hat Universal Base Image (UBI) <-
--------------------------------------------

  * Built from a subset of RHEL content
  * Redistributable: Can be freely shared and deployed
    * See [Characteristics of UBI images](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/building_running_and_managing_containers/index#con_characteristics-of-ubi-images_assembly_types-of-container-images)
    * See [Red Hat Universal Base Image End User Licensing Agreement](https://www.redhat.com/licenses/EULA_Red_Hat_Universal_Base_Image_English_20190422.pdf)
  * For base images are available:
    * [init](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/building_running_and_managing_containers/index#con_understanding-the-ubi-init-images_assembly_types-of-container-images)
    * [micro](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/building_running_and_managing_containers/index#con_understanding-the-ubi-micro-images_assembly_types-of-container-images)
    * [minimal](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/building_running_and_managing_containers/index#con_understanding-the-ubi-minimal-images_assembly_types-of-container-images)
    * [standard](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/building_running_and_managing_containers/index#con_understanding-the-ubi-standard-images_assembly_types-of-container-images)
  * The `ubi-9-baseos` and `ubi-9-appstream` repositories hold the redistributable subset of packages you can include in your container
  * Provide a set of pre-built language runtime container images such as `python`, `perl`, `php`, `dotnet`, `nodejs`, and `ruby`

-------------------------------------------------------------------------------

-> The Red Hat RHEL Image <-
----------------------------

  * Not freely distributale
  * Host needs a valid RHEL subscription

-------------------------------------------------------------------------------

-> Characteristics of UBI and RHEL Images <-
--------------------------------------------

  * Supported by Red Hat for use with containerized applications
  * Listed in the [Red Hat Container Catalog](https://catalog.redhat.com/software/containers/search), with descriptions, technical details, and health index
  * Well-defined [update schedule](https://access.redhat.com/articles/2208321)

-------------------------------------------------------------------------------

-> Run containers using Ansible <-
==================================

**User Story:** Teams should be able to run containers and pods in a rootless Podman environment. The containerized applications should be able to store data persistently in databases or local file systems.
